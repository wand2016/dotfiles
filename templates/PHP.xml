<templateSet group="PHP">
  <template name="accessor" value="/**&#10; * $NAME_JP$のアクセサ&#10; * @param int $value&#10; * @return $NAME$&#10; */&#10;public function get$NAME$Attribute($value): $NAME$&#10;{&#10;    return new $NAME$((int)$value);&#10;}" description="Eloquent Model Accessor" toReformat="true" toShortenFQNames="true">
    <variable name="NAME_JP" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="mutator" value="/**&#10; * $NAME_JP$のミューテータ&#10; * @param mixed $VARIABLE_NAME$&#10; */&#10;public function set$NAME$Attribute($VARIABLE_NAME$): void&#10;{&#10;    $value = ($VARIABLE_NAME$ instanceof $NAME$) ? $VARIABLE_NAME$-&gt;getValue() : ((int)$VARIABLE_NAME$);&#10;    $this-&gt;attributes['$ATTRIBUTE$'] = $value;&#10;}" description="Eloquent Model Mutator" toReformat="true" toShortenFQNames="true">
    <variable name="NAME_JP" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="VARIABLE_NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="ATTRIBUTE" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="test" value="/**&#10; * @testdox $TESTDOX$&#10; */&#10;public function test$TEST_CASE_NAME$(): void {&#10;&#10;}&#10;" description="PHPUnit test case" toReformat="false" toShortenFQNames="true">
    <variable name="TESTDOX" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="TEST_CASE_NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
</templateSet>