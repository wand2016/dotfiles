(setq company-statistics--scores #s(hash-table size 400 test equal rehash-size 1.5 rehash-threshold 0.8 data ("jedi:complete-on-dot" (((:file "c:/Users/wand/dotfiles/.emacs.d/conf/python-config.el") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "jedi:use-shortcuts" (((:file "c:/Users/wand/dotfiles/.emacs.d/conf/python-config.el") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "python-mode-hook" (((:file "c:/Users/wand/dotfiles/.emacs.d/conf/python-config.el") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "jedi:setup-function" (((:file "c:/Users/wand/dotfiles/.emacs.d/conf/python-config.el") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "add-to-list" (((:file "c:/Users/wand/dotfiles/.emacs.d/conf/python-config.el") . 1) ((:keyword "setq") . 4) (emacs-lisp-mode . 4) (nil . 4) ((:file "c:/Users/wand/dotfiles/.emacs.d/init.el") . 3)) "company-backends" (((:file "c:/Users/wand/dotfiles/.emacs.d/conf/python-config.el") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "company-jedi" (((:file "c:/Users/wand/dotfiles/.emacs.d/conf/python-config.el") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "functools" (((:file "c:/Tools/emacs-25.2/bin/test.py") . 3) ((:keyword "import") . 2) (python-mode . 3) (nil . 3) ((:keyword "def") . 1)) "partial" (((:file "c:/Tools/emacs-25.2/bin/test.py") . 2) ((:symbol "functools") . 2) ((:keyword "import") . 1) (python-mode . 2) (nil . 2) ((:keyword "def") . 1)) "myfunc" (((:file "c:/Tools/emacs-25.2/bin/test.py") . 1) ((:keyword "def") . 1) (python-mode . 1) (nil . 1)) "dabbrev" (((:file "c:/Users/wand/dotfiles/.emacs.d/conf/js-config.el") . 1) ((:keyword "if") . 1) (emacs-lisp-mode . 1) (nil . 1)) "getElementById" (((:file "c:/Tools/emacs-25.2/bin/test.js") . 2) ((:symbol "docunemt") . 1) (js2-mode . 2) (nil . 2) ((:symbol "document") . 1) ((:keyword "var") . 1)) "CriLaMyPlayerFtbl" (((:file "c:/Tools/emacs-25.2/bin/test.js") . 2) ((:symbol "CriLaMyPlayerFtbl") . 2) (js2-mode . 2) (nil . 2)) "unko" (((:file "c:/Tools/emacs-25.2/bin/test.js") . 1) ((:keyword "var") . 1) (js2-mode . 1) (nil . 1)) "print" (((:file "c:/Tools/emacs-25.2/bin/test.py") . 1) ((:keyword "def") . 1) (python-mode . 1) (nil . 1)) "tern.cmd" ((shell-mode . 1) (nil . 1)) "python.exe" ((shell-mode . 9) (nil . 10) (eshell-mode . 1)) "test.py" ((shell-mode . 87) (nil . 87)) "const" (((:file "c:/Users/wand/Desktop/js_learn/test.js") . 1) ((:keyword "function") . 1) (js2-mode . 1) (nil . 1)) "fixjsstyle.exe" ((shell-mode . 4) (nil . 4)) "test.js" ((shell-mode . 3) (nil . 3)) "global-map" (((:file "c:/Users/wand/dotfiles/.emacs.d/conf/key-bind-config.el") . 3) (emacs-lisp-mode . 4) (nil . 4) ((:file "c:/Users/wand/dotfiles/.emacs.d/init.el") . 1) ((:keyword "require") . 1)) "anything-show-kill-ring" (((:file "c:/Users/wand/dotfiles/.emacs.d/conf/key-bind-config.el") . 1) (emacs-lisp-mode . 1) (nil . 1)) "color" (((:file "c:/Users/wand/dotfiles/.emacs.d/init.el") . 2) ((:keyword "setq") . 2) (emacs-lisp-mode . 2) (nil . 2)) "moccur" (((:file "c:/Users/wand/dotfiles/.emacs.d/init.el") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 2) (nil . 2) ((:file "c:/Users/wand/dotfiles/.emacs.d/conf/key-bind-config.el") . 1)) "require" (((:file "c:/Users/wand/dotfiles/.emacs.d/init.el") . 9) ((:keyword "when") . 5) (emacs-lisp-mode . 10) (nil . 10) ((:keyword "and") . 1) ((:keyword "setq") . 2) ((:file "c:/Users/wand/dotfiles/.emacs.d/conf/my-helm-config.el") . 1) ((:keyword "require") . 2)) "occur-by-moccur" (((:file "c:/Users/wand/dotfiles/.emacs.d/init.el") . 1) ((:keyword "require") . 1) (emacs-lisp-mode . 1) (nil . 1)) "dmoccur-exclusion-mask" (((:file "c:/Users/wand/dotfiles/.emacs.d/init.el") . 2) ((:keyword "setq") . 2) (emacs-lisp-mode . 2) (nil . 2)) "executable-find" (((:file "c:/Users/wand/dotfiles/.emacs.d/init.el") . 1) ((:keyword "and") . 1) (emacs-lisp-mode . 1) (nil . 1)) "moccur-use-migemo" (((:file "c:/Users/wand/dotfiles/.emacs.d/init.el") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "moccur-edit" (((:file "c:/Users/wand/dotfiles/.emacs.d/init.el") . 1) ((:keyword "require") . 1) (emacs-lisp-mode . 1) (nil . 1)) "web-mode" (((:file "c:/Users/wand/dotfiles/.emacs.d/init.el") . 1) ((:keyword "require") . 1) (emacs-lisp-mode . 1) (nil . 1)) "helm-descbinds" (((:file "c:/Users/wand/dotfiles/.emacs.d/init.el") . 1) ((:keyword "require") . 1) (emacs-lisp-mode . 1) (nil . 1)) "helm-descbinds-install" (((:file "c:/Users/wand/dotfiles/.emacs.d/init.el") . 1) ((:keyword "require") . 1) (emacs-lisp-mode . 1) (nil . 1)) "setq" (((:file "c:/Users/wand/dotfiles/.emacs.d/conf/my-helm-config.el") . 1) ((:keyword "require") . 1) (emacs-lisp-mode . 1) (nil . 1)) "helm-c-moccur-helm-idle-delay" (((:file "c:/Users/wand/dotfiles/.emacs.d/conf/my-helm-config.el") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "helm-input-idle-delay" (((:file "c:/Users/wand/dotfiles/.emacs.d/conf/my-helm-config.el") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "helm-candidate-number-limit" (((:file "c:/Users/wand/dotfiles/.emacs.d/conf/my-helm-config.el") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "helm-popup-tip-mode" (((:file "c:/Users/wand/dotfiles/.emacs.d/conf/my-helm-config.el") . 1) (emacs-lisp-mode . 1) (nil . 1)) "undo" (((:file "c:/Users/wand/dotfiles/.emacs.d/init.el") . 1) ((:keyword "require") . 1) (emacs-lisp-mode . 1) (nil . 1)) "helm-documentation" (((:file "c:/Users/wand/dotfiles/.emacs.d/conf/my-helm-config.el") . 1) ((:keyword "require") . 1) (emacs-lisp-mode . 1) (nil . 1)) "helm-google" (((:file "c:/Users/wand/dotfiles/.emacs.d/conf/my-helm-config.el") . 1) ((:keyword "require") . 1) (emacs-lisp-mode . 1) (nil . 1)) "helm-configuration" (((:file "c:/Users/wand/dotfiles/.emacs.d/conf/my-helm-config.el") . 1) ((:keyword "require") . 1) (emacs-lisp-mode . 1) (nil . 1)) "ace-jump-mode" (((:file "c:/Users/wand/dotfiles/.emacs.d/init.el") . 1) ((:keyword "require") . 1) (emacs-lisp-mode . 1) (nil . 1)) "pop" (((:file "c:/Users/wand/dotfiles/.emacs.d/init.el") . 1) ((:keyword "require") . 1) (emacs-lisp-mode . 1) (nil . 1)) "popup" (((:file "c:/Users/wand/dotfiles/.emacs.d/init.el") . 1) ((:keyword "require") . 1) (emacs-lisp-mode . 1) (nil . 1)) "return" (((:file "c:/Users/wand/dotfiles/.emacs.d/test.js") . 1) ((:keyword "break") . 1) (js2-mode . 1) (nil . 1)) "flyspell-mode" (((:file "c:/Users/wand/dotfiles/.emacs.d/init.el") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "run-with-idle-timer" (((:file "c:/Users/wand/dotfiles/.emacs.d/init.el") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "flymake" (((:file "c:/Users/wand/dotfiles/.emacs.d/init.el") . 1) ((:keyword "require") . 1) (emacs-lisp-mode . 1) (nil . 1)) "flymake-popup-current-error-menu" (((:file "c:/Users/wand/dotfiles/.emacs.d/conf/my-flymake-config.el") . 1) ((:keyword "progn") . 1) (emacs-lisp-mode . 1) (nil . 1)) "symbol-function" (((:file "c:/Users/wand/dotfiles/.emacs.d/conf/my-flymake-config.el") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "flymake-cursor" (((:file "c:/Users/wand/dotfiles/.emacs.d/conf/my-flymake-config.el") . 1) ((:keyword "require") . 1) (emacs-lisp-mode . 1) (nil . 1)) "files" (((:file "c:/Users/wand/dotfiles/.emacs.d/conf/my-helm-config.el") . 1) ((:keyword "require") . 1) (emacs-lisp-mode . 1) (nil . 1)) "define-key" (((:file "c:/Users/wand/dotfiles/.emacs.d/conf/my-helm-config.el") . 1) ((:keyword "require") . 1) (emacs-lisp-mode . 1) (nil . 1)) "False" (((:file "c:/Tools/emacs-25.2/bin/test.py") . 1) (python-mode . 1) (nil . 1)) "input_file_path" (((:file "c:/Tools/Shinchoku/shin.py") . 1) ((:keyword "in") . 1) (python-mode . 1) (nil . 1)) "shinchoku_flymake.txt" ((shell-mode . 1) (nil . 1)) "continue" (((:file "c:/Tools/Shinchoku/shin.py") . 1) ((:keyword "not") . 1) (python-mode . 1) (nil . 1)) "section_head_list" (((:file "c:/Tools/Shinchoku/shin.py") . 1) ((:keyword "in") . 1) (python-mode . 1) (nil . 1)) "pass" (((:file "c:/Tools/Shinchoku/shin.py") . 1) ((:keyword "else") . 1) (python-mode . 1) (nil . 1)) "contetn_pattern_todo" (((:file "c:/Tools/Shinchoku/shin.py") . 1) ((:keyword "import") . 1) (python-mode . 1) (nil . 1)) "section_appearance" (((:file "c:/Tools/Shinchoku/shin.py") . 4) ((:keyword "in") . 1) (python-mode . 4) (nil . 4) ((:keyword "if") . 1) ((:keyword "print") . 2)) "comment_pattern" (((:file "c:/Tools/Shinchoku/shin.py") . 1) ((:keyword "if") . 1) (python-mode . 1) (nil . 1)) "print_err" (((:file "c:/Tools/Shinchoku/shin.py") . 1) ((:keyword "not") . 1) (python-mode . 1) (nil . 1)) "pattern" (((:file "c:/Tools/Shinchoku/shin.py") . 1) ((:keyword "return") . 1) (python-mode . 1) (nil . 1)) "pat_and_err_list" (((:file "c:/Tools/Shinchoku/shin.py") . 1) ((:keyword "lambda") . 1) (python-mode . 1) (nil . 1)) "pat_match_done" (((:file "c:/Tools/Shinchoku/shin.py") . 1) ((:keyword "in") . 1) (python-mode . 1) (nil . 1)) "pat_match_todo" (((:file "c:/Tools/Shinchoku/shin.py") . 1) ((:keyword "in") . 1) (python-mode . 1) (nil . 1)) "os2emxpath" (((:file "c:/Tools/emacs-25.2/bin/test.py") . 2) ((:keyword "import") . 3) (python-mode . 3) (nil . 3) ((:file "c:/Users/wand/Desktop/python_learn/test.py") . 1)) "defineProperties" (((:file "c:/Users/wand/Desktop/js_learn/test.js") . 2) ((:symbol "Object") . 3) ((:keyword "var") . 1) (js2-mode . 3) (nil . 3) ((:keyword "function") . 2) ((:file "c:/Users/wand/Desktop/js_learn/test2.js") . 1)) "行ベクトルを先に作っておく" (((:file "c:/Users/wand/Desktop/js_learn/test.js") . 1) ((:keyword "function") . 1) (js2-mode . 1) (nil . 1)) "値をくるむプロパティの配列様オブジェクト" (((:file "c:/Users/wand/Desktop/js_learn/test.js") . 1) ((:keyword "function") . 1) (js2-mode . 1) (nil . 1)) "matrix_discriptors" (((:file "c:/Users/wand/Desktop/js_learn/test.js") . 2) ((:keyword "var") . 1) (js2-mode . 2) (nil . 2) ((:keyword "return") . 1)) "m00" (((:file "c:/Users/wand/Desktop/js_learn/test.js") . 1) ((:symbol "o") . 1) ((:keyword "function") . 1) (js2-mode . 1) (nil . 1)) "toString" (((:file "c:/Users/wand/Desktop/js_learn/test.js") . 1) ((:symbol "vector") . 1) ((:keyword "function") . 1) (js2-mode . 3) (nil . 3) ((:file "c:/Users/wand/Desktop/js_learn/test2.js") . 2) ((:symbol "keys") . 2) ((:keyword "in") . 2)) "defineProperty" (((:file "c:/Users/wand/Desktop/js_learn/test.js") . 1) ((:symbol "Object") . 1) ((:keyword "var") . 1) (js2-mode . 1) (nil . 1)) "Object" (((:file "c:/Users/wand/Desktop/js_learn/test.js") . 1) ((:keyword "var") . 1) (js2-mode . 1) (nil . 1)) "new_matrix" (((:file "c:/Users/wand/Desktop/js_learn/test.js") . 1) ((:keyword "function") . 1) (js2-mode . 1) (nil . 1)) "matrix" (((:file "c:/Users/wand/Desktop/js_learn/test.js") . 1) ((:keyword "var") . 1) (js2-mode . 1) (nil . 1)) "enumerable" (((:file "c:/Users/wand/Desktop/js_learn/test.js") . 1) ((:keyword "var") . 1) (js2-mode . 1) (nil . 1)) "せっかく作った配列様オブジェクトの参照が外れる" (((:file "c:/Users/wand/Desktop/js_learn/test.js") . 1) ((:keyword "function") . 1) (js2-mode . 1) (nil . 1)) "inやkeys" (((:file "c:/Users/wand/Desktop/js_learn/test.js") . 1) ((:keyword "function") . 1) (js2-mode . 1) (nil . 1)) "index" (((:file "c:/Users/wand/Desktop/js_learn/test2.js") . 2) ((:keyword "function") . 2) (js2-mode . 2) (nil . 2)) "prop_names" (((:file "c:/Users/wand/Desktop/js_learn/test2.js") . 4) ((:keyword "in") . 1) (js2-mode . 4) (nil . 4) ((:keyword "var") . 1) ((:keyword "return") . 1) ((:keyword "function") . 1)) "prop_name" (((:file "c:/Users/wand/Desktop/js_learn/test2.js") . 2) ((:keyword "return") . 1) (js2-mode . 2) (nil . 2) ((:keyword "function") . 1)) "length" (((:file "c:/Users/wand/Desktop/js_learn/test2.js") . 2) ((:symbol "prop_names") . 1) ((:keyword "function") . 1) (js2-mode . 2) (nil . 2) ((:symbol "names") . 1) ((:keyword "var") . 1)) "names_two_dimension" (((:file "c:/Users/wand/Desktop/js_learn/test2.js") . 2) ((:keyword "var") . 2) (js2-mode . 2) (nil . 2)) "__proto__" (((:file "c:/Users/wand/Desktop/js_learn/test2.js") . 1) ((:symbol "nil") . 1) ((:keyword "var") . 1) (js2-mode . 1) (nil . 1)) "keys" (((:file "c:/Users/wand/Desktop/js_learn/test2.js") . 1) ((:keyword "var") . 1) (js2-mode . 1) (nil . 1)) "プロパティの配列様オブジェクト" (((:file "c:/Users/wand/Desktop/js_learn/test2.js") . 1) ((:keyword "function") . 1) (js2-mode . 1) (nil . 1)) "配列代入" (((:file "c:/Users/wand/Desktop/js_learn/test2.js") . 1) ((:keyword "var") . 1) (js2-mode . 1) (nil . 1)) "単純に代入する" (((:file "c:/Users/wand/Desktop/js_learn/test2.js") . 1) ((:keyword "var") . 1) (js2-mode . 1) (nil . 1)) "vector" (((:file "c:/Users/wand/Desktop/js_learn/test2.js") . 1) ((:symbol "row") . 1) ((:keyword "function") . 1) (js2-mode . 1) (nil . 1)) "m01" (((:file "c:/Users/wand/Desktop/js_learn/test2.js") . 1) ((:symbol "o") . 1) ((:keyword "function") . 1) (js2-mode . 1) (nil . 1)) "val" (((:file "c:/Users/wand/Desktop/python_learn/test.py") . 2) ((:keyword "self") . 2) (python-mode . 2) (nil . 2)) "python_characterics.txt" ((shell-mode . 1) (nil . 1)) "Stepper" (((:file "c:/Users/wand/Desktop/python_learn/test.py") . 1) ((:keyword "self") . 1) (python-mode . 1) (nil . 1)) "and" (((:file "c:/Users/wand/Desktop/python_learn/test.py") . 6) ((:keyword "class") . 3) (python-mode . 6) (nil . 6) ((:keyword "import") . 2)) "del" (((:file "c:/Users/wand/Desktop/python_learn/test.py") . 1) ((:keyword "print") . 1) (python-mode . 1) (nil . 1)) "cmd.exe" ((shell-mode . 1) (nil . 1)) "key" (((:file "c:/Users/wand/Desktop/python_learn/test.py") . 1) ((:symbol "nil") . 1) ((:keyword "print") . 1) (python-mode . 1) (nil . 1)) "time" (((:file "c:/Users/wand/Desktop/python_learn/test.py") . 1) ((:keyword "import") . 1) (python-mode . 1) (nil . 1)) "startTime" (((:file "c:/Users/wand/Desktop/python_learn/test.py") . 1) ((:keyword "in") . 1) (python-mode . 1) (nil . 1)) "w32-scroll-lock-modifier" (((:file "c:/Users/wand/dotfiles/.emacs.d/conf/key-bind-config.el") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "capitalize-word" (((:file "c:/Users/wand/dotfiles/.emacs.d/conf/key-bind-config.el") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "capitalize-dwim" (((:file "c:/Users/wand/dotfiles/.emacs.d/conf/key-bind-config.el") . 1) ((:keyword "interactive") . 1) (emacs-lisp-mode . 1) (nil . 1)) "superword-mode" (((:file "c:/Users/wand/dotfiles/.emacs.d/conf/key-bind-config.el") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "upcase-dwim" (((:file "c:/Users/wand/dotfiles/.emacs.d/conf/key-bind-config.el") . 1) ((:keyword "interactive") . 1) (emacs-lisp-mode . 1) (nil . 1)) "apis" (((:file "c:/Users/wand/Desktop/js_learn/thebibliography.org") . 1) (org-mode . 1) (nil . 1)) "html5rocks" (((:file "c:/Users/wand/Desktop/js_learn/thebibliography.org") . 3) ((:symbol "//www") . 3) (org-mode . 3) (nil . 3)) "tutorials" (((:file "c:/Users/wand/Desktop/js_learn/thebibliography.org") . 1) (org-mode . 1) (nil . 1)) "rendering" (((:file "c:/Users/wand/Desktop/js_learn/thebibliography.org") . 1) (org-mode . 1) (nil . 1)) "expensive" (((:file "c:/Users/wand/Desktop/js_learn/thebibliography.org") . 1) (org-mode . 1) (nil . 1)) "aerotwist" (((:file "c:/Users/wand/Desktop/js_learn/thebibliography.org") . 1) (org-mode . 1) (nil . 1)) "fundamentals" (((:file "c:/Users/wand/Desktop/js_learn/thebibliography.org") . 1) (org-mode . 1) (nil . 1)) "performance" (((:file "c:/Users/wand/Desktop/js_learn/thebibliography.org") . 1) (org-mode . 1) (nil . 1)) "enlarge-window-horizontally" (((:file "c:/Users/wand/dotfiles/.emacs.d/conf/key-bind-config.el") . 1) ((:keyword "interactive") . 1) (emacs-lisp-mode . 1) (nil . 1)) "shrink-window-horizontally" (((:file "c:/Users/wand/dotfiles/.emacs.d/conf/key-bind-config.el") . 1) ((:keyword "interactive") . 1) (emacs-lisp-mode . 1) (nil . 1)) "通常のメソッドとスタティックメソッドの違いは" (((:file "c:/Users/wand/Desktop/learn/python/py_26.txt") . 1) (text-mode . 1) (nil . 1)))) company-statistics--log [("通常のメソッドとスタティックメソッドの違いは" (nil . 1) (text-mode . 1) ((:file "c:/Users/wand/Desktop/learn/python/py_26.txt") . 1)) nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil ("jedi:complete-on-dot" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "c:/Users/wand/dotfiles/.emacs.d/conf/python-config.el") . 1)) ("jedi:use-shortcuts" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "c:/Users/wand/dotfiles/.emacs.d/conf/python-config.el") . 1)) ("python-mode-hook" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "c:/Users/wand/dotfiles/.emacs.d/conf/python-config.el") . 1)) ("jedi:setup-function" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "c:/Users/wand/dotfiles/.emacs.d/conf/python-config.el") . 1)) ("add-to-list" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "c:/Users/wand/dotfiles/.emacs.d/conf/python-config.el") . 1)) ("company-backends" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "c:/Users/wand/dotfiles/.emacs.d/conf/python-config.el") . 1)) ("company-jedi" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "c:/Users/wand/dotfiles/.emacs.d/conf/python-config.el") . 1)) ("functools" (nil . 3) (python-mode . 3) ((:keyword "import") . 2) ((:file "c:/Tools/emacs-25.2/bin/test.py") . 3)) ("functools" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) ((:file "c:/Tools/emacs-25.2/bin/test.py") . 1)) ("partial" (nil . 2) (python-mode . 2) ((:keyword "import") . 1) ((:symbol "functools") . 2) ((:file "c:/Tools/emacs-25.2/bin/test.py") . 2)) ("functools" (nil . 1) (python-mode . 1) ((:keyword "def") . 1) ((:file "c:/Tools/emacs-25.2/bin/test.py") . 1)) ("partial" (nil . 1) (python-mode . 1) ((:keyword "def") . 1) ((:symbol "functools") . 1) ((:file "c:/Tools/emacs-25.2/bin/test.py") . 1)) ("myfunc" (nil . 1) (python-mode . 1) ((:keyword "def") . 1) ((:file "c:/Tools/emacs-25.2/bin/test.py") . 1)) ("dabbrev" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "if") . 1) ((:file "c:/Users/wand/dotfiles/.emacs.d/conf/js-config.el") . 1)) ("getElementById" (nil . 1) (js2-mode . 1) ((:symbol "docunemt") . 1) ((:file "c:/Tools/emacs-25.2/bin/test.js") . 1)) ("CriLaMyPlayerFtbl" (nil . 2) (js2-mode . 2) ((:symbol "CriLaMyPlayerFtbl") . 2) ((:file "c:/Tools/emacs-25.2/bin/test.js") . 2)) ("CriLaMyPlayerFtbl" (nil . 1) (js2-mode . 1) ((:symbol "CriLaMyPlayerFtbl") . 1) ((:file "c:/Tools/emacs-25.2/bin/test.js") . 1)) ("getElementById" (nil . 1) (js2-mode . 1) ((:keyword "var") . 1) ((:symbol "document") . 1) ((:file "c:/Tools/emacs-25.2/bin/test.js") . 1)) ("unko" (nil . 1) (js2-mode . 1) ((:keyword "var") . 1) ((:file "c:/Tools/emacs-25.2/bin/test.js") . 1)) ("print" (nil . 1) (python-mode . 1) ((:keyword "def") . 1) ((:file "c:/Tools/emacs-25.2/bin/test.py") . 1)) ("tern.cmd" (nil . 1) (shell-mode . 1)) ("python.exe" (nil . 2) (shell-mode . 2)) ("test.py" (nil . 2) (shell-mode . 2)) ("python.exe" (nil . 1) (shell-mode . 1)) ("test.py" (nil . 1) (shell-mode . 1)) ("const" (nil . 1) (js2-mode . 1) ((:keyword "function") . 1) ((:file "c:/Users/wand/Desktop/js_learn/test.js") . 1)) ("fixjsstyle.exe" (nil . 4) (shell-mode . 4)) ("fixjsstyle.exe" (nil . 1) (shell-mode . 1)) ("test.js" (nil . 3) (shell-mode . 3)) ("fixjsstyle.exe" (nil . 1) (shell-mode . 1)) ("test.js" (nil . 1) (shell-mode . 1)) ("fixjsstyle.exe" (nil . 1) (shell-mode . 1)) ("test.js" (nil . 1) (shell-mode . 1)) ("global-map" (nil . 2) (emacs-lisp-mode . 2) ((:file "c:/Users/wand/dotfiles/.emacs.d/conf/key-bind-config.el") . 1)) ("anything-show-kill-ring" (nil . 1) (emacs-lisp-mode . 1) ((:file "c:/Users/wand/dotfiles/.emacs.d/conf/key-bind-config.el") . 1)) ("color" (nil . 2) (emacs-lisp-mode . 2) ((:keyword "setq") . 2) ((:file "c:/Users/wand/dotfiles/.emacs.d/init.el") . 2)) ("color" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "c:/Users/wand/dotfiles/.emacs.d/init.el") . 1)) ("moccur" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "c:/Users/wand/dotfiles/.emacs.d/init.el") . 1)) ("require" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "when") . 1) ((:file "c:/Users/wand/dotfiles/.emacs.d/init.el") . 1)) ("global-map" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "require") . 1) ((:file "c:/Users/wand/dotfiles/.emacs.d/init.el") . 1)) ("occur-by-moccur" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "require") . 1) ((:file "c:/Users/wand/dotfiles/.emacs.d/init.el") . 1)) ("add-to-list" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "c:/Users/wand/dotfiles/.emacs.d/init.el") . 1)) ("add-to-list" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "c:/Users/wand/dotfiles/.emacs.d/init.el") . 1)) ("dmoccur-exclusion-mask" (nil . 2) (emacs-lisp-mode . 2) ((:keyword "setq") . 2) ((:file "c:/Users/wand/dotfiles/.emacs.d/init.el") . 2)) ("add-to-list" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "c:/Users/wand/dotfiles/.emacs.d/init.el") . 1)) ("dmoccur-exclusion-mask" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "c:/Users/wand/dotfiles/.emacs.d/init.el") . 1)) ("executable-find" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "and") . 1) ((:file "c:/Users/wand/dotfiles/.emacs.d/init.el") . 1)) ("require" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "and") . 1) ((:file "c:/Users/wand/dotfiles/.emacs.d/init.el") . 1)) ("moccur-use-migemo" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "c:/Users/wand/dotfiles/.emacs.d/init.el") . 1)) ("require" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "c:/Users/wand/dotfiles/.emacs.d/init.el") . 1)) ("moccur-edit" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "require") . 1) ((:file "c:/Users/wand/dotfiles/.emacs.d/init.el") . 1)) ("web-mode" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "require") . 1) ((:file "c:/Users/wand/dotfiles/.emacs.d/init.el") . 1)) ("require" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "when") . 1) ((:file "c:/Users/wand/dotfiles/.emacs.d/init.el") . 1)) ("helm-descbinds" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "require") . 1) ((:file "c:/Users/wand/dotfiles/.emacs.d/init.el") . 1)) ("helm-descbinds-install" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "require") . 1) ((:file "c:/Users/wand/dotfiles/.emacs.d/init.el") . 1)) ("global-map" (nil . 1) (emacs-lisp-mode . 1) ((:file "c:/Users/wand/dotfiles/.emacs.d/conf/key-bind-config.el") . 1)) ("moccur" (nil . 1) (emacs-lisp-mode . 1) ((:file "c:/Users/wand/dotfiles/.emacs.d/conf/key-bind-config.el") . 1)) ("global-map" (nil . 1) (emacs-lisp-mode . 1) ((:file "c:/Users/wand/dotfiles/.emacs.d/conf/key-bind-config.el") . 1)) ("setq" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "require") . 1) ((:file "c:/Users/wand/dotfiles/.emacs.d/conf/my-helm-config.el") . 1)) ("helm-c-moccur-helm-idle-delay" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "c:/Users/wand/dotfiles/.emacs.d/conf/my-helm-config.el") . 1)) ("helm-input-idle-delay" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "c:/Users/wand/dotfiles/.emacs.d/conf/my-helm-config.el") . 1)) ("helm-candidate-number-limit" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "c:/Users/wand/dotfiles/.emacs.d/conf/my-helm-config.el") . 1)) ("helm-popup-tip-mode" (nil . 1) (emacs-lisp-mode . 1) ((:file "c:/Users/wand/dotfiles/.emacs.d/conf/my-helm-config.el") . 1)) ("require" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "when") . 1) ((:file "c:/Users/wand/dotfiles/.emacs.d/init.el") . 1)) ("undo" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "require") . 1) ((:file "c:/Users/wand/dotfiles/.emacs.d/init.el") . 1)) ("require" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "when") . 1) ((:file "c:/Users/wand/dotfiles/.emacs.d/init.el") . 1)) ("helm-documentation" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "require") . 1) ((:file "c:/Users/wand/dotfiles/.emacs.d/conf/my-helm-config.el") . 1)) ("require" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "require") . 2) ((:file "c:/Users/wand/dotfiles/.emacs.d/conf/my-helm-config.el") . 1)) ("helm-google" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "require") . 1) ((:file "c:/Users/wand/dotfiles/.emacs.d/conf/my-helm-config.el") . 1)) ("helm-configuration" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "require") . 1) ((:file "c:/Users/wand/dotfiles/.emacs.d/conf/my-helm-config.el") . 1)) ("require" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "require") . 1) ((:file "c:/Users/wand/dotfiles/.emacs.d/init.el") . 1)) ("ace-jump-mode" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "require") . 1) ((:file "c:/Users/wand/dotfiles/.emacs.d/init.el") . 1)) ("require" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "when") . 1) ((:file "c:/Users/wand/dotfiles/.emacs.d/init.el") . 1)) ("require" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "c:/Users/wand/dotfiles/.emacs.d/init.el") . 1)) ("pop" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "require") . 1) ((:file "c:/Users/wand/dotfiles/.emacs.d/init.el") . 1)) ("popup" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "require") . 1) ((:file "c:/Users/wand/dotfiles/.emacs.d/init.el") . 1)) ("return" (nil . 1) (js2-mode . 1) ((:keyword "break") . 1) ((:file "c:/Users/wand/dotfiles/.emacs.d/test.js") . 1)) ("flyspell-mode" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "c:/Users/wand/dotfiles/.emacs.d/init.el") . 1)) ("run-with-idle-timer" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "c:/Users/wand/dotfiles/.emacs.d/init.el") . 1)) ("flymake" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "require") . 1) ((:file "c:/Users/wand/dotfiles/.emacs.d/init.el") . 1)) ("flymake-popup-current-error-menu" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "progn") . 1) ((:file "c:/Users/wand/dotfiles/.emacs.d/conf/my-flymake-config.el") . 1)) ("symbol-function" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "c:/Users/wand/dotfiles/.emacs.d/conf/my-flymake-config.el") . 1)) ("flymake-cursor" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "require") . 1) ((:file "c:/Users/wand/dotfiles/.emacs.d/conf/my-flymake-config.el") . 1)) ("files" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "require") . 1) ((:file "c:/Users/wand/dotfiles/.emacs.d/conf/my-helm-config.el") . 1)) ("define-key" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "require") . 1) ((:file "c:/Users/wand/dotfiles/.emacs.d/conf/my-helm-config.el") . 1)) ("False" (nil . 1) (python-mode . 1) ((:file "c:/Tools/emacs-25.2/bin/test.py") . 1)) ("input_file_path" (nil . 1) (python-mode . 1) ((:keyword "in") . 1) ((:file "c:/Tools/Shinchoku/shin.py") . 1)) ("shinchoku_flymake.txt" (nil . 1) (shell-mode . 1)) ("continue" (nil . 1) (python-mode . 1) ((:keyword "not") . 1) ((:file "c:/Tools/Shinchoku/shin.py") . 1)) ("section_head_list" (nil . 1) (python-mode . 1) ((:keyword "in") . 1) ((:file "c:/Tools/Shinchoku/shin.py") . 1)) ("pass" (nil . 1) (python-mode . 1) ((:keyword "else") . 1) ((:file "c:/Tools/Shinchoku/shin.py") . 1)) ("contetn_pattern_todo" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) ((:file "c:/Tools/Shinchoku/shin.py") . 1)) ("section_appearance" (nil . 4) (python-mode . 4) ((:keyword "in") . 1) ((:file "c:/Tools/Shinchoku/shin.py") . 4)) ("section_appearance" (nil . 1) (python-mode . 1) ((:keyword "if") . 1) ((:file "c:/Tools/Shinchoku/shin.py") . 1)) ("section_appearance" (nil . 1) (python-mode . 1) ((:keyword "print") . 2) ((:file "c:/Tools/Shinchoku/shin.py") . 1)) ("comment_pattern" (nil . 1) (python-mode . 1) ((:keyword "if") . 1) ((:file "c:/Tools/Shinchoku/shin.py") . 1)) ("section_appearance" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:file "c:/Tools/Shinchoku/shin.py") . 1)) ("print_err" (nil . 1) (python-mode . 1) ((:keyword "not") . 1) ((:file "c:/Tools/Shinchoku/shin.py") . 1)) ("pattern" (nil . 1) (python-mode . 1) ((:keyword "return") . 1) ((:file "c:/Tools/Shinchoku/shin.py") . 1)) ("pat_and_err_list" (nil . 1) (python-mode . 1) ((:keyword "lambda") . 1) ((:file "c:/Tools/Shinchoku/shin.py") . 1)) ("pat_match_done" (nil . 1) (python-mode . 1) ((:keyword "in") . 1) ((:file "c:/Tools/Shinchoku/shin.py") . 1)) ("pat_match_todo" (nil . 1) (python-mode . 1) ((:keyword "in") . 1) ((:file "c:/Tools/Shinchoku/shin.py") . 1)) ("os2emxpath" (nil . 2) (python-mode . 2) ((:keyword "import") . 2) ((:file "c:/Tools/emacs-25.2/bin/test.py") . 2)) ("os2emxpath" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) ((:file "c:/Tools/emacs-25.2/bin/test.py") . 1)) ("defineProperties" (nil . 2) (js2-mode . 2) ((:keyword "var") . 1) ((:symbol "Object") . 2) ((:file "c:/Users/wand/Desktop/js_learn/test.js") . 2)) ("行ベクトルを先に作っておく" (nil . 1) (js2-mode . 1) ((:keyword "function") . 1) ((:file "c:/Users/wand/Desktop/js_learn/test.js") . 1)) ("値をくるむプロパティの配列様オブジェクト" (nil . 1) (js2-mode . 1) ((:keyword "function") . 1) ((:file "c:/Users/wand/Desktop/js_learn/test.js") . 1)) ("defineProperties" (nil . 1) (js2-mode . 1) ((:keyword "function") . 1) ((:symbol "Object") . 1) ((:file "c:/Users/wand/Desktop/js_learn/test.js") . 1)) ("matrix_discriptors" (nil . 2) (js2-mode . 2) ((:keyword "var") . 1) ((:file "c:/Users/wand/Desktop/js_learn/test.js") . 2)) ("m00" (nil . 1) (js2-mode . 1) ((:keyword "function") . 1) ((:symbol "o") . 1) ((:file "c:/Users/wand/Desktop/js_learn/test.js") . 1)) ("toString" (nil . 1) (js2-mode . 1) ((:keyword "function") . 1) ((:symbol "vector") . 1) ((:file "c:/Users/wand/Desktop/js_learn/test.js") . 1)) ("defineProperty" (nil . 1) (js2-mode . 1) ((:keyword "var") . 1) ((:symbol "Object") . 1) ((:file "c:/Users/wand/Desktop/js_learn/test.js") . 1)) ("Object" (nil . 1) (js2-mode . 1) ((:keyword "var") . 1) ((:file "c:/Users/wand/Desktop/js_learn/test.js") . 1)) ("matrix_discriptors" (nil . 1) (js2-mode . 1) ((:keyword "return") . 1) ((:file "c:/Users/wand/Desktop/js_learn/test.js") . 1)) ("new_matrix" (nil . 1) (js2-mode . 1) ((:keyword "function") . 1) ((:file "c:/Users/wand/Desktop/js_learn/test.js") . 1)) ("matrix" (nil . 1) (js2-mode . 1) ((:keyword "var") . 1) ((:file "c:/Users/wand/Desktop/js_learn/test.js") . 1)) ("enumerable" (nil . 1) (js2-mode . 1) ((:keyword "var") . 1) ((:file "c:/Users/wand/Desktop/js_learn/test.js") . 1)) ("せっかく作った配列様オブジェクトの参照が外れる" (nil . 1) (js2-mode . 1) ((:keyword "function") . 1) ((:file "c:/Users/wand/Desktop/js_learn/test.js") . 1)) ("inやkeys" (nil . 1) (js2-mode . 1) ((:keyword "function") . 1) ((:file "c:/Users/wand/Desktop/js_learn/test.js") . 1)) ("index" (nil . 2) (js2-mode . 2) ((:keyword "function") . 2) ((:file "c:/Users/wand/Desktop/js_learn/test2.js") . 2)) ("index" (nil . 1) (js2-mode . 1) ((:keyword "function") . 1) ((:file "c:/Users/wand/Desktop/js_learn/test2.js") . 1)) ("prop_names" (nil . 4) (js2-mode . 4) ((:keyword "in") . 1) ((:file "c:/Users/wand/Desktop/js_learn/test2.js") . 4)) ("prop_names" (nil . 1) (js2-mode . 1) ((:keyword "var") . 1) ((:file "c:/Users/wand/Desktop/js_learn/test2.js") . 1)) ("prop_name" (nil . 2) (js2-mode . 2) ((:keyword "return") . 1) ((:file "c:/Users/wand/Desktop/js_learn/test2.js") . 2)) ("prop_names" (nil . 1) (js2-mode . 1) ((:keyword "return") . 1) ((:file "c:/Users/wand/Desktop/js_learn/test2.js") . 1)) ("prop_names" (nil . 1) (js2-mode . 1) ((:keyword "function") . 1) ((:file "c:/Users/wand/Desktop/js_learn/test2.js") . 1)) ("prop_name" (nil . 1) (js2-mode . 1) ((:keyword "function") . 1) ((:file "c:/Users/wand/Desktop/js_learn/test2.js") . 1)) ("defineProperties" (nil . 1) (js2-mode . 1) ((:keyword "function") . 1) ((:symbol "Object") . 1) ((:file "c:/Users/wand/Desktop/js_learn/test2.js") . 1)) ("length" (nil . 2) (js2-mode . 2) ((:keyword "function") . 1) ((:symbol "prop_names") . 1) ((:file "c:/Users/wand/Desktop/js_learn/test2.js") . 2)) ("length" (nil . 1) (js2-mode . 1) ((:keyword "var") . 1) ((:symbol "names") . 1) ((:file "c:/Users/wand/Desktop/js_learn/test2.js") . 1)) ("names_two_dimension" (nil . 2) (js2-mode . 2) ((:keyword "var") . 2) ((:file "c:/Users/wand/Desktop/js_learn/test2.js") . 2)) ("names_two_dimension" (nil . 1) (js2-mode . 1) ((:keyword "var") . 1) ((:file "c:/Users/wand/Desktop/js_learn/test2.js") . 1)) ("__proto__" (nil . 1) (js2-mode . 1) ((:keyword "var") . 1) ((:symbol "nil") . 1) ((:file "c:/Users/wand/Desktop/js_learn/test2.js") . 1)) ("keys" (nil . 1) (js2-mode . 1) ((:keyword "var") . 1) ((:file "c:/Users/wand/Desktop/js_learn/test2.js") . 1)) ("プロパティの配列様オブジェクト" (nil . 1) (js2-mode . 1) ((:keyword "function") . 1) ((:file "c:/Users/wand/Desktop/js_learn/test2.js") . 1)) ("配列代入" (nil . 1) (js2-mode . 1) ((:keyword "var") . 1) ((:file "c:/Users/wand/Desktop/js_learn/test2.js") . 1)) ("単純に代入する" (nil . 1) (js2-mode . 1) ((:keyword "var") . 1) ((:file "c:/Users/wand/Desktop/js_learn/test2.js") . 1)) ("toString" (nil . 1) (js2-mode . 1) ((:keyword "in") . 2) ((:symbol "keys") . 2) ((:file "c:/Users/wand/Desktop/js_learn/test2.js") . 2)) ("toString" (nil . 1) (js2-mode . 1) ((:keyword "in") . 1) ((:symbol "keys") . 1) ((:file "c:/Users/wand/Desktop/js_learn/test2.js") . 1)) ("vector" (nil . 1) (js2-mode . 1) ((:keyword "function") . 1) ((:symbol "row") . 1) ((:file "c:/Users/wand/Desktop/js_learn/test2.js") . 1)) ("m01" (nil . 1) (js2-mode . 1) ((:keyword "function") . 1) ((:symbol "o") . 1) ((:file "c:/Users/wand/Desktop/js_learn/test2.js") . 1)) ("val" (nil . 2) (python-mode . 2) ((:keyword "self") . 2) ((:file "c:/Users/wand/Desktop/python_learn/test.py") . 2)) ("python.exe" (nil . 1) (shell-mode . 1)) ("test.py" (nil . 1) (shell-mode . 1)) ("os2emxpath" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) ((:file "c:/Users/wand/Desktop/python_learn/test.py") . 1)) ("python.exe" (nil . 1) (shell-mode . 1)) ("test.py" (nil . 1) (shell-mode . 1)) ("python_characterics.txt" (nil . 1) (shell-mode . 1)) ("test.py" (nil . 1) (shell-mode . 1)) ("test.py" (nil . 1) (shell-mode . 1)) ("test.py" (nil . 1) (shell-mode . 1)) ("test.py" (nil . 1) (shell-mode . 1)) ("test.py" (nil . 1) (shell-mode . 1)) ("test.py" (nil . 1) (shell-mode . 1)) ("test.py" (nil . 1) (shell-mode . 1)) ("test.py" (nil . 1) (shell-mode . 1)) ("test.py" (nil . 1) (shell-mode . 1)) ("test.py" (nil . 1) (shell-mode . 1)) ("Stepper" (nil . 1) (python-mode . 1) ((:keyword "self") . 1) ((:file "c:/Users/wand/Desktop/python_learn/test.py") . 1)) ("python.exe" (nil . 1) (shell-mode . 1)) ("test.py" (nil . 1) (shell-mode . 1)) ("python.exe" (nil . 1) (shell-mode . 1)) ("test.py" (nil . 1) (shell-mode . 1)) ("python.exe" (nil . 1) (shell-mode . 1)) ("test.py" (nil . 1) (shell-mode . 1)) ("val" (nil . 1) (python-mode . 1) ((:keyword "self") . 1) ((:file "c:/Users/wand/Desktop/python_learn/test.py") . 1)) ("test.py" (nil . 1) (shell-mode . 1)) ("test.py" (nil . 1) (shell-mode . 1)) ("test.py" (nil . 1) (shell-mode . 1)) ("test.py" (nil . 1) (shell-mode . 1)) ("test.py" (nil . 1) (shell-mode . 1)) ("test.py" (nil . 1) (shell-mode . 1)) ("test.py" (nil . 1) (shell-mode . 1)) ("test.py" (nil . 1) (shell-mode . 1)) ("test.py" (nil . 1) (shell-mode . 1)) ("test.py" (nil . 1) (shell-mode . 1)) ("test.py" (nil . 1) (shell-mode . 1)) ("test.py" (nil . 1) (shell-mode . 1)) ("test.py" (nil . 1) (shell-mode . 1)) ("and" (nil . 3) (python-mode . 3) ((:keyword "class") . 3) ((:file "c:/Users/wand/Desktop/python_learn/test.py") . 3)) ("and" (nil . 1) (python-mode . 1) ((:keyword "class") . 1) ((:file "c:/Users/wand/Desktop/python_learn/test.py") . 1)) ("and" (nil . 1) (python-mode . 1) ((:keyword "class") . 1) ((:file "c:/Users/wand/Desktop/python_learn/test.py") . 1)) ("test.py" (nil . 1) (shell-mode . 1)) ("test.py" (nil . 1) (shell-mode . 1)) ("del" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:file "c:/Users/wand/Desktop/python_learn/test.py") . 1)) ("test.py" (nil . 1) (shell-mode . 1)) ("python.exe" (nil . 1) (shell-mode . 1)) ("test.py" (nil . 1) (shell-mode . 1)) ("cmd.exe" (nil . 1) (shell-mode . 1)) ("python.exe" (nil . 1) (eshell-mode . 1)) ("test.py" (nil . 1) (shell-mode . 1)) ("test.py" (nil . 1) (shell-mode . 1)) ("test.py" (nil . 1) (shell-mode . 1)) ("test.py" (nil . 1) (shell-mode . 1)) ("test.py" (nil . 1) (shell-mode . 1)) ("test.py" (nil . 1) (shell-mode . 1)) ("test.py" (nil . 1) (shell-mode . 1)) ("test.py" (nil . 1) (shell-mode . 1)) ("test.py" (nil . 1) (shell-mode . 1)) ("test.py" (nil . 1) (shell-mode . 1)) ("test.py" (nil . 1) (shell-mode . 1)) ("test.py" (nil . 1) (shell-mode . 1)) ("test.py" (nil . 1) (shell-mode . 1)) ("test.py" (nil . 1) (shell-mode . 1)) ("test.py" (nil . 1) (shell-mode . 1)) ("test.py" (nil . 1) (shell-mode . 1)) ("test.py" (nil . 1) (shell-mode . 1)) ("test.py" (nil . 1) (shell-mode . 1)) ("test.py" (nil . 1) (shell-mode . 1)) ("test.py" (nil . 1) (shell-mode . 1)) ("test.py" (nil . 1) (shell-mode . 1)) ("and" (nil . 1) (python-mode . 1) ((:file "c:/Users/wand/Desktop/python_learn/test.py") . 1)) ("test.py" (nil . 1) (shell-mode . 1)) ("test.py" (nil . 1) (shell-mode . 1)) ("test.py" (nil . 1) (shell-mode . 1)) ("test.py" (nil . 1) (shell-mode . 1)) ("test.py" (nil . 1) (shell-mode . 1)) ("key" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:symbol "nil") . 1) ((:file "c:/Users/wand/Desktop/python_learn/test.py") . 1)) ("test.py" (nil . 1) (shell-mode . 1)) ("test.py" (nil . 1) (shell-mode . 1)) ("test.py" (nil . 1) (shell-mode . 1)) ("test.py" (nil . 1) (shell-mode . 1)) ("test.py" (nil . 1) (shell-mode . 1)) ("test.py" (nil . 1) (shell-mode . 1)) ("test.py" (nil . 1) (shell-mode . 1)) ("test.py" (nil . 1) (shell-mode . 1)) ("test.py" (nil . 1) (shell-mode . 1)) ("test.py" (nil . 1) (shell-mode . 1)) ("test.py" (nil . 1) (shell-mode . 1)) ("test.py" (nil . 1) (shell-mode . 1)) ("test.py" (nil . 1) (shell-mode . 1)) ("test.py" (nil . 1) (shell-mode . 1)) ("test.py" (nil . 1) (shell-mode . 1)) ("test.py" (nil . 1) (shell-mode . 1)) ("test.py" (nil . 1) (shell-mode . 1)) ("test.py" (nil . 1) (shell-mode . 1)) ("test.py" (nil . 1) (shell-mode . 1)) ("test.py" (nil . 1) (shell-mode . 1)) ("test.py" (nil . 1) (shell-mode . 1)) ("time" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) ((:file "c:/Users/wand/Desktop/python_learn/test.py") . 1)) ("and" (nil . 1) (python-mode . 1) ((:keyword "import") . 2) ((:file "c:/Users/wand/Desktop/python_learn/test.py") . 1)) ("and" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) ((:file "c:/Users/wand/Desktop/python_learn/test.py") . 1)) ("startTime" (nil . 1) (python-mode . 1) ((:keyword "in") . 1) ((:file "c:/Users/wand/Desktop/python_learn/test.py") . 1)) ("test.py" (nil . 1) (shell-mode . 1)) ("test.py" (nil . 1) (shell-mode . 1)) ("test.py" (nil . 1) (shell-mode . 1)) ("test.py" (nil . 1) (shell-mode . 1)) ("w32-scroll-lock-modifier" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "c:/Users/wand/dotfiles/.emacs.d/conf/key-bind-config.el") . 1)) ("capitalize-word" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "c:/Users/wand/dotfiles/.emacs.d/conf/key-bind-config.el") . 1)) ("capitalize-dwim" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "interactive") . 1) ((:file "c:/Users/wand/dotfiles/.emacs.d/conf/key-bind-config.el") . 1)) ("superword-mode" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "c:/Users/wand/dotfiles/.emacs.d/conf/key-bind-config.el") . 1)) ("upcase-dwim" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "interactive") . 1) ((:file "c:/Users/wand/dotfiles/.emacs.d/conf/key-bind-config.el") . 1)) ("apis" (nil . 1) (org-mode . 1) ((:file "c:/Users/wand/Desktop/js_learn/thebibliography.org") . 1)) ("html5rocks" (nil . 3) (org-mode . 3) ((:symbol "//www") . 3) ((:file "c:/Users/wand/Desktop/js_learn/thebibliography.org") . 3)) ("html5rocks" (nil . 1) (org-mode . 1) ((:symbol "//www") . 1) ((:file "c:/Users/wand/Desktop/js_learn/thebibliography.org") . 1)) ("html5rocks" (nil . 1) (org-mode . 1) ((:symbol "//www") . 1) ((:file "c:/Users/wand/Desktop/js_learn/thebibliography.org") . 1)) ("tutorials" (nil . 1) (org-mode . 1) ((:file "c:/Users/wand/Desktop/js_learn/thebibliography.org") . 1)) ("rendering" (nil . 1) (org-mode . 1) ((:file "c:/Users/wand/Desktop/js_learn/thebibliography.org") . 1)) ("expensive" (nil . 1) (org-mode . 1) ((:file "c:/Users/wand/Desktop/js_learn/thebibliography.org") . 1)) ("aerotwist" (nil . 1) (org-mode . 1) ((:file "c:/Users/wand/Desktop/js_learn/thebibliography.org") . 1)) ("fundamentals" (nil . 1) (org-mode . 1) ((:file "c:/Users/wand/Desktop/js_learn/thebibliography.org") . 1)) ("performance" (nil . 1) (org-mode . 1) ((:file "c:/Users/wand/Desktop/js_learn/thebibliography.org") . 1)) ("enlarge-window-horizontally" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "interactive") . 1) ((:file "c:/Users/wand/dotfiles/.emacs.d/conf/key-bind-config.el") . 1)) ("shrink-window-horizontally" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "interactive") . 1) ((:file "c:/Users/wand/dotfiles/.emacs.d/conf/key-bind-config.el") . 1)) ("python.exe" (nil . 1) (shell-mode . 1)) ("test.py" (nil . 1) (shell-mode . 1)) ("test.py" (nil . 1) (shell-mode . 1))] company-statistics--index 1)